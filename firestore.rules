
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Lock down all collections by default
    match /{document=**} {
      allow read, write: if false;
    }

    // Secure the 'clients' collection
    match /clients/{clientId} {
      allow read, create, update, delete: if isOwner(resource.data.userId);
    }
    
    // Secure client subcollections
    match /clients/{clientId}/{subcollection}/{docId} {
       allow read, write: if isOwner(get(/databases/$(database)/documents/clients/$(clientId)).data.userId);
    }

    // Secure the 'invoices' collection
    match /invoices/{invoiceId} {
      allow read, create, update, delete: if isOwner(resource.data.userId);
    }

    // Secure the 'employees' collection
    match /employees/{employeeId} {
      allow read, create, update, delete: if isOwner(resource.data.userId);
    }

    // Secure the 'jobs' collection
    match /jobs/{jobId} {
      allow read, create, update, delete: if isOwner(resource.data.userId);
    }

    // Secure the 'tasks' collection
    match /tasks/{taskId} {
      allow read, create, update, delete: if isOwner(resource.data.userId);
    }
    
    // Secure the 'journalEntries' collection
    match /journalEntries/{entryId} {
        allow read, create, update, delete: if isOwner(resource.data.userId);
    }

    // Secure the 'purchaseOrders' collection
    match /purchaseOrders/{poId} {
        allow read, create, update, delete: if isOwner(resource.data.userId);
    }
    
    // Secure other root collections
    match /bankAccounts/{accountId} {
       allow read, create, update, delete: if isOwner(resource.data.userId);
    }

    match /inventory/{itemId} {
       allow read, create, update, delete: if isOwner(resource.data.userId);
    }

    match /productionPlans/{planId} {
       allow read, create, update, delete: if isOwner(resource.data.userId);
    }
    
    match /taxFilings/{filingId} {
       allow read, create, update, delete: if isOwner(resource.data.userId);
    }

    match /taxPayments/{paymentId} {
       allow read, create, update, delete: if isOwner(resource.data.userId);
    }

    match /timeLogs/{logId} {
       allow read, create, update, delete: if isOwner(resource.data.userId);
    }
    
    match /workOrders/{orderId} {
        allow read, create, update, delete: if isOwner(resource.data.userId);
    }
    
    // Chart of accounts is user-specific, but the docId is the userId
    match /chartOfAccounts/{userId} {
      allow read, create, update, delete: if isOwner(userId);
    }
  }
}
